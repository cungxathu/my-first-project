import React, { useState } from 'react';
import { AiOutlineHome } from "react-icons/ai";
import { TfiFullscreen } from "react-icons/tfi";
import Button from '@mui/material/Button';
import { IoIosHeartEmpty } from "react-icons/io";
import { useContext } from "react";
import { MyContext } from "../../App";
import ProductItem from "../../Components/ProductItem";
import { Link } from "react-router-dom";
import { useNavigate } from 'react-router-dom';




const Listing = () =>{
  const navigate = useNavigate();

  const context = useContext(MyContext);
  const viewProductDetails=(id)=>{
    context.setisOpenProductModal(true);

}


    const [filters, setFilters] = useState({
        material: '',
        gender: '',
        priceRange: '',
        keyword: '',
        sort: ''
      });
      const products = [
        {
          id: 1,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ ƒë√≠nh ƒë√° cao c·∫•p Swarovski B.N5001",
          oldPrice: "1,679,000ƒë",
          price: "1,479,000ƒë",
        },
        {
          id: 2,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n ƒë√¥i b·∫°c ƒë√≠nh ƒë√° pha l√™ J.N5001-J.N5002",
          oldPrice: "2,187,000ƒë",
          price: "1,987,000ƒë",
        },
        {
          id: 3,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ hoa mai ƒë√≠nh ƒë√° J.N5720 thi·∫øt k·∫ø ƒë·∫πp",
          oldPrice: "1,175,000ƒë",
          price: "975,000ƒë",
        },
        {
          id: 4,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ v√†ng h·ªìng ƒë√≠nh ƒë√° J.N5723 cao c·∫•p",
          oldPrice: "975,000ƒë",
          price: "775,000ƒë",
        },
        {
          id: 5,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ ƒë√≠nh ƒë√° cao c·∫•p Swarovski B.N5001",
          oldPrice: "1,479,000ƒë",
          price: "1,279,000ƒë",
        },
        {
          id: 6,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n ƒë√¥i b·∫°c 925 ƒë√≠nh ƒë√° sang tr·ªçng J.N5025-J.N5026",
          oldPrice: "2,075,000ƒë",
          price: "1,875,000ƒë",
        },
        {
          id: 7,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n ƒë√¥i b·∫°c 925 ƒë√≠nh ƒë√° cao c·∫•p J.N8125-J.N8126",
          oldPrice: "1,780,000ƒë",
          price: "1,580,000ƒë",
        },
        {
          id: 8,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ ƒë√≠nh ƒë√° cao c·∫•p J.N5723 cao c·∫•p",
          oldPrice: "1,075,000ƒë",
          price: "875,000ƒë",
        },
        {
          id: 9,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ ƒë√≠nh ƒë√° cao c·∫•p Swarovski B.N5001",
          oldPrice: "1,679,000ƒë",
          price: "1,479,000ƒë",
        },
        {
          id: 10,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n nam b·∫°c ƒë∆°n gi·∫£n m·∫∑t ƒë√° ƒëen B.N5220",
          oldPrice: "975,000ƒë",
          price: "775,000ƒë",
        },
        {
          id: 11,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n b·∫°c n·ªØ m·∫∑t ƒë√° xanh d∆∞∆°ng cao c·∫•p N.N5723",
          oldPrice: "1,175,000ƒë",
          price: "975,000ƒë",
        },
        {
          id: 12,
          image: "https://cdn.pnj.io/images/detailed/237/sp-gnxm00y005207-nhan-vang-dinh-da-ecz-pnj-1.png",
          name: "Nh·∫´n ƒë√¥i b·∫°c 925 thi·∫øt k·∫ø sang tr·ªçng A.N5025-A.N5026",
          oldPrice: "2,075,000ƒë",
          price: "1,875,000ƒë",
        },
      ];
      const handleFilterChange = (filterName, value) => {
        setFilters({
          ...filters,
          [filterName]: value
        });
        // Here you would typically call a function to apply the filters
        console.log('Filters updated:', { ...filters, [filterName]: value });
      };

  
  const filteredProducts = products
  .filter(product => {
    // L·ªçc theo t·ª´ kh√≥a
    if (filters.keyword && !product.name.toLowerCase().includes(filters.keyword.toLowerCase())) {
      return false;
    }

    // L·ªçc theo ch·∫•t li·ªáu
    if (filters.material && product.material !== filters.material) {
      return false;
    }

    // L·ªçc theo gi·ªõi t√≠nh
    if (filters.gender && product.gender !== filters.gender) {
      return false;
    }

    // L·ªçc theo kho·∫£ng gi√°
    if (filters.priceRange) {
      const priceNum = parseInt(product.price.replace(/\D/g, ''));
      const [min, max] = filters.priceRange.split('-');

      if (max === "plus") {
        if (priceNum <= parseInt(min)) return false;
      } else {
        if (priceNum < parseInt(min) || priceNum > parseInt(max)) return false;
      }
    }

    return true;
  })
  .sort((a, b) => {
    const priceA = parseInt(a.price.replace(/\D/g, ''));
    const priceB = parseInt(b.price.replace(/\D/g, ''));
    if (filters.sort === "price-asc") return priceA - priceB;
    if (filters.sort === "price-desc") return priceB - priceA;
    return 0;
  });


  return (
    <div className="lili-jewelry-page">
      <header className="header">
        <div className="top-bar">
          <div className="container">
            <div className="top-left">
              <a href="/"><AiOutlineHome size={20} className='iconHome'/> Trang ch·ªß</a>
              <span className="separator">|</span>
              <span className="active">Nh·∫´n</span>
            </div>
          </div>
        </div>
      </header>

      <div className="container">
        <section className="hero-section">
          <div className="hero-content">
            <h1 className="main-title">NH·∫™N<br />CAO C·∫§P</h1>
            <div className="divider"></div>
            <p className="description">
              Hi·ªán th·ªùi hi·ªán c√≥ nhi·ªÅu lo·∫°i nh·∫´n b·∫°c kh√°c nhau, nh·∫´n n·ªØ hay nam ƒë·ªÅu c√≥ ƒë·∫∑c ƒëi·ªÉm ri√™ng v√† ƒë·ªÅu ƒë√£ l√†m say ƒë·∫Øm bi·∫øt bao ng∆∞·ªùi s·ª≠ d·ª•ng c·ªßa ch√∫ng
            </p>
          </div>
          <div className="hero-image">
            <img src="" alt="" />
          </div>
        </section>

        <section className="featured-products">
          <div className="section-title">
            <div className="title-line"></div>
            <h2>S·∫¢N PH·∫®M ƒê·ªÄ XU·∫§T</h2>
            <div className="title-line"></div>
          </div>

          <div className="product_row productRow2 w-100 mt-4 d-flex">
            {products.map(product => (
                <div key={product.id} className="item productItem"
                onClick={() => navigate(`/product/${product.id}`)} // üëâ chuy·ªÉn trang chi ti·∫øt
        style={{ cursor: 'pointer' }} >
                <div className="imgWrapper">
                <img src={product.image} className="w-100" alt={product.name}/>
                {product.discountPercent && (
                  <span className="badge badge-primary">
                    -{product.discountPercent}%
                  </span>
)}
                <div className="actions">
                  <Button onClick={(e) => { e.stopPropagation(); viewProductDetails(product.id);}}><TfiFullscreen/></Button>
                  <Button onClick={(e) => e.stopPropagation()}><IoIosHeartEmpty style={{fontSize: '20px'}}/></Button>
                </div>
                </div>
                <div className="info">
                <h4 className="spham">{product.name}</h4>
                <div className="d-flex align-items-center">
                <span className="oldPrice">{product.oldPrice}</span>
                <span className="netPrice text-danger ml-2">{product.price}</span>
                </div>
                {product.promotion && (
                  <p className="promotion mt-4">{product.promotion}</p>
                  )}
                {product.sold && (
                  <p className="sold">{product.sold} ƒë√£ b√°n</p>
                  )}
            </div>
            </div>
            ))}
            </div>

                                        
                                    
                             
        </section>

        <section className="category-section">
          <div className="section-title">
            <div className="title-line"></div>
            <h2>NH·∫™N</h2>
            <div className="title-line"></div>
          </div>

          <div className="filter-container">
      <div className="filter-item">
        <select 
          value={filters.material}
          onChange={(e) => handleFilterChange('material', e.target.value)}
          aria-label="Ch·∫•t li·ªáu"
        >
          <option value="">Ch·∫•t li·ªáu</option>
          <option value="vang">V√†ng</option>
          <option value="bac">B·∫°c</option>
          <option value="titanium">Titanium</option>
        </select>
        <span className="chevron">‚ñº</span>
      </div>
      
      <div className="filter-item">
        <select
          value={filters.gender}
          onChange={(e) => handleFilterChange('gender', e.target.value)}
          aria-label="Gi·ªõi t√≠nh"
        >
          <option value="">Gi·ªõi t√≠nh</option>
          <option value="nam">Nam</option>
          <option value="nu">N·ªØ</option>
          <option value="unisex">Unisex</option>
        </select>
        <span className="chevron">‚ñº</span>
      </div>
      
      <div className="filter-item">
        <select
          value={filters.priceRange}
          onChange={(e) => handleFilterChange('priceRange', e.target.value)}
          aria-label="Kho·∫£ng gi√°"
        >
          <option value="">Kho·∫£ng gi√°</option>
          <option value="0-500000">D∆∞·ªõi 500.000‚Ç´</option>
          <option value="500000-1000000">500.000‚Ç´ - 1.000.000‚Ç´</option>
          <option value="1000000-2000000">1.000.000‚Ç´ - 2.000.000‚Ç´</option>
          <option value="2000000-plus">Tr√™n 2.000.000‚Ç´</option>
        </select>
        <span className="chevron">‚ñº</span>
      </div>
      
      <div className="filter-item">
        <input 
          type="text" 
          placeholder="T·ª´ kh√≥a s·∫£n ph·∫©m..." 
          value={filters.keyword}
          onChange={(e) => handleFilterChange('keyword', e.target.value)}
          aria-label="T·ª´ kh√≥a s·∫£n ph·∫©m"
        />
      </div>
      
      <div className="filter-item">
        <select
          value={filters.sort}
          onChange={(e) => handleFilterChange('sort', e.target.value)}
          aria-label="S·∫Øp x·∫øp"
        >
          <option value="">S·∫Øp x·∫øp</option>
          <option value="price-asc">Gi√° tƒÉng d·∫ßn</option>
          <option value="price-desc">Gi√° gi·∫£m d·∫ßn</option>
          <option value="newest">M·ªõi nh·∫•t</option>
          <option value="bestseller">B√°n ch·∫°y nh·∫•t</option>
        </select>
        <span className="chevron">‚ñº</span>
      </div>
          </div>
          <div className="product_row productRow2 w-100 mt-4 d-flex flex-wrap">
  {filteredProducts.length > 0 ? (
    filteredProducts.map(product => (
      <div key={product.id} className="item productItem"
        onClick={() => navigate(`/product/${product.id}`)} // üëâ chuy·ªÉn trang chi ti·∫øt
        style={{ cursor: 'pointer' }} >
        <div className="imgWrapper">
          <img src={product.image} className="w-100" alt={product.name} />
          {product.discountPercent && (
            <span className="badge badge-primary">
              -{product.discountPercent}%
            </span>
)} {/* B·∫°n c√≥ th·ªÉ t√≠nh % gi·∫£m n·∫øu mu·ªën */}
          <div className="actions">
            <Button onClick={(e) => { e.stopPropagation(); viewProductDetails(product.id);}}><TfiFullscreen /></Button>
            <Button onClick={(e) => e.stopPropagation()}><IoIosHeartEmpty style={{ fontSize: '20px' }} /></Button>
          </div>
        </div>
        <div className="info">
          <h4 className="spham">{product.name}</h4>
          <div className="d-flex align-items-center">
            <span className="oldPrice">{product.oldPrice}</span>
            <span className="netPrice text-danger ml-2">{product.price}</span>
          </div>
          {product.promotion && (
              <p className="promotion mt-4">{product.promotion}</p>
              )}
          {product.sold && (
              <p className="sold">{product.sold} ƒë√£ b√°n</p>
                )} {/* B·∫°n c√≥ th·ªÉ thay sold s·ªë kh√°c n·∫øu mu·ªën */}
        </div>
      </div>
    ))
  ) : (
    <p>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p.</p>
  )}
</div>
                           

          
        </section>
      </div>
    </div>
  );
};

export default Listing;